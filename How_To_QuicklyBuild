HOW TO QUICKLY BUILD SCABI

Initial Setup

1. Install Oracle Java 8 Java SE 1.8.0_66
2. Install Git
3. Install Maven
4. Install Eclipse MARS or later
5. Create folder /home/(username)/scabi
6. cd to scabi folder
7. Run command
	git clone https://www.github.com/dilshadmustafa/scabi.git
	git clone https://www.github.com/dilshadmustafa/StorageHandler.git
	git clone https://www.github.com/dilshadmustafa/bigqueue.git
8. Inside the Scabi project, folder named "Download", extract the file  scabi.tar.gz and copy all the jar files from the folder named "dependency-jars". Or alternatively, use any of the Maven pom.xml file inside DilshadDCS_Core or DilshadDCS_CS or DilshadDCS_MS to get all the dependency jar files.
9. In Eclipse, import the following folders DilshadDCS_Core, DilshadDCS_CS, DilshadDCS_MS, Dilshad_StorageHandler and "Test" as **separate** projects using File->Import->Existing Projects into Workspace.
10. In Eclipse, create new Java project and point to existing Java source code in bigqueue folder.
11. In Eclipse, set dependency for DilshadDCS_Core project by right-click->Properties->Java Build Path->Projects->add Dilshad_StorageHandler and bigqueue.
12. In Eclipse, set dependency for DilshadDCS_CS project by right-click->Properties->Java Build Path->Projects->add DilshadDCS_Core, Dilshad_StorageHandler and bigqueue.
13. In Eclipse, set dependency for DilshadDCS_MS project by right-click->Properties->Java Build Path->Projects->add DilshadDCS_Core.
14. In Eclipse, set dependency for Test project by right-click->Properties->Java Build Path->Projects->add DilshadDCS_Core, Dilshad_StorageHandler and bigqueue.
15. In Eclipse, set dependency for bigqueue project by right-click->Properties->Java Build Path->Projects->add Dilshad_StorageHandler.
16. In Eclipse, add jar files for DilshadDCS_Core, DilshadDCS_CS, DilshadDCS_MS and Test project by right-click->Properties->Java Build Path->Libraries->add the jar files obtained in step (8).
17. In Eclipse, add log4j-1.2.17.jar file for bigqueue project by right-click->Properties->Java Build Path->Libraries->add log4j-1.2.17.jar file.
18. In Eclipse, set Java VM arguments by right-click on file DilshadDCS_CS->ComputerServer_D2.java->Run/Debug Settings->Arguments->VM arguments,
	-Dscabi.local.dir="/home/(username)/testdata/server1_local"
	-Dscabi.storage.provider="dfs"
	-Dscabi.dfs.mount.dir="/home/(username)/testdata/storage".
or for SeaweedFS: 
	-Dscabi.local.dir="/home/(username)/testdata/server1_local"
	-Dscabi.storage.provider="seaweedfs"
	-Dscabi.seaweedfs.config="localhost-8888".
	
19. In Eclipse, set Java VM arguments by right-click on file Test->Test8_Data2_operate_lambda.java (e.g.)->Run/Debug Settings->Arguments->VM arguments, 
	-Dscabi.local.dir="/home/(username)/testdata/driver_local"
	-Dscabi.storage.provider="dfs"
	-Dscabi.dfs.mount.dir="/home/(username)/testdata/storage" 
or for SeaweedFS: 
	-Dscabi.local.dir="/home/(username)/testdata/driver_local"
	-Dscabi.storage.provider="seaweedfs"
	-Dscabi.seaweedfs.config="localhost-8888".

20. Storage directory (-Dscabi.dfs.mount.dir) or storage system (S3-interface, SeaweedFS, etc. e.g. -Dscabi.seaweedfs.config="localhost-8888") should be the same for all compute service nodes (DilshadDCS_CS->ComputerServer_D2.java) and driver code (e.g. Test->Test8_Data2_operate_lambda.java) as the storage system forms the Data Ring.

21. Run MongoDB or Cassandra server.

22. In Eclipse, right-click on files, DilshadDCS_MS->MetaServer.java, DilshadDCS_CS->ComputerServer_D2.java (compute service), Test->Test8_Data2_operate_lambda.java (driver code example) and click Run As->Java Aplication.


