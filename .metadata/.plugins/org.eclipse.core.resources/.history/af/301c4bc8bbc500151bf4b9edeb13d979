/**
 * @author Dilshad Mustafa
 * (c) Dilshad Mustafa
 * All Rights Reserved.
 * @version 1.0
 * @since 28-Jan-2016
 * File Name : DDAO.java
 */
package com.dilmus.scabi.common;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBObject;
import com.mongodb.MapReduceCommand;
import com.mongodb.MapReduceOutput;

/**
 * @author Dilshad Mustafa
 *
 */
public class DDAO {

	final static Logger log = LoggerFactory.getLogger(DDAO.class);
	private DB db;
	private String tableName;
	private boolean firstTime;
	
	public DDAO(DB db) {
		this.db = db;
		tableName = null;
		firstTime = true;
	}
	
	public int setTableName(String tableName) {
		this.tableName = tableName;
		firstTime = true;
		return 0;
	}

	public boolean next() throws DScabiException {
		if (firstTime) {
			if (db.collectionExists(tableName) == false) {
				throw new DScabiException("Collection name doesn't exist : " + tableName, "DDO.NET.1");
			}
			
			String map = "function() { for (var key in this) { emit(key, null); } }";
			String reduce = "function(key, stuff) { return null; }";
			
			DBCollection table = db.getCollection(tableName);
			   MapReduceCommand cmd = new MapReduceCommand(table, map, reduce,
					   	     null, MapReduceCommand.OutputType.INLINE, null);
					   	   MapReduceOutput out = table.mapReduce(cmd);
					   	   //String s = out.getOutputCollection().distinct("_id").toString();
					   	//System.out.println("out.getOutputCollection().distinct " + s);
					   	   for (DBObject o : out.results()) {
					   	    System.out.println(o.toString());
					   	 System.out.println("Key name is : " + o.get("_id").toString());
					   	   }			
			firstTime = false;
		}
		
		return true;
	}




}
