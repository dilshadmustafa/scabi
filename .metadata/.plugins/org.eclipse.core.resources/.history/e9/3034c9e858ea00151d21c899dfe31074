/**
 * @author Dilshad Mustafa
 * (c) Dilshad Mustafa
 * All Rights Reserved.
 * @version 1.0
 * @since 10-Mar-2016
 * File Name : DDBNew.java
 */
package com.dilmus.dilshad.scabi.common;

/**
 * @author Dilshad Mustafa
 *
 */

import java.util.ArrayList;
import java.util.Set;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.dilmus.dilshad.scabi.common.DScabiException;
import com.dilmus.dilshad.scabi.common.DTable;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBObject;
import com.mongodb.MapReduceCommand;
import com.mongodb.MapReduceOutput;
import com.mongodb.MongoClient;
import com.mongodb.ReadPreference;
import com.mongodb.WriteConcern;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.MongoIterable;

/**
 * @author Dilshad Mustafa
 *
 */
public class DDB {

	final static Logger log = LoggerFactory.getLogger(DDB.class);
	
	private MongoClient m_mongo = null;
	private MongoDatabase m_mongodb = null;
	
	private String m_dbHost = null;
	private String m_dbPort = null;
	private String m_dbName = null;
	
	public DDB(String dbHost, String dbPort, String dbName) {
		m_mongo = new MongoClient(dbHost, Integer.parseInt(dbPort));
		m_mongodb = m_mongo.getDatabase(dbName);		
		
		m_dbHost = dbHost;
		m_dbPort = dbPort;
		m_dbName = dbName;
		
		m_mongo.setWriteConcern(WriteConcern.ACKNOWLEDGED);
		// ?? m_mongo.setReadPreference(ReadPreference.primaryPreferred());
	}
	
	public MongoDatabase getDB() {
		return m_mongodb;
	}

	public MongoDatabase getDatabase() {
		return m_mongodb;
	}
	
	public boolean tableExists(String tableName) {
	    MongoIterable<String> collectionNames = m_mongodb.listCollectionNames();
	    for (String name : collectionNames) {
	        if (name.equalsIgnoreCase(tableName)) {
	            return true;
	        }
	    }
	    return false;
	}
	
	public DTable getTable(String tableName) throws DScabiException {
		if (null == tableName) {
			throw new DScabiException("Table name is null", "DBD.GTE.1");
		}
		if (false == tableExists(tableName)) {
			throw new DScabiException("Table name doesn't exist : " + tableName, "DBD.GTE.2");
		}
		MongoCollection<?> table = m_mongodb.getCollection(tableName);
		return new DTable(this, table);
	}

	public DTable createTable(String tableName) throws DScabiException {
		MongoCollection<?> table = null;
		if (null == tableName) {
			throw new DScabiException("Table name is null", "DBD.CTE.1");
		}
		if (false == tableExists(tableName)) {
			log.debug("Table doesn't exist : {}. So creating", tableName);
			m_mongodb.createCollection(tableName);
			return getTable(tableName);
		}
		else {
			//table = m_mongodb.getCollection(tableName);
			throw new DScabiException("Table already exists, table name : " + tableName, "DDB.CTE.1");
		}
		//return new DTable(this, table);
	}

	public int close() {
		m_mongo.close();
		return 0;
	}
	
}
