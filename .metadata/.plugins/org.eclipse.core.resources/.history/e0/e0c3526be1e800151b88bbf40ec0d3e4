import static com.mongodb.client.model.Filters.eq;
import static com.mongodb.client.model.Filters.lt;
import static com.mongodb.client.model.Filters.or;

import java.io.IOException;
import java.util.Date;

import org.apache.http.ParseException;

import com.dilmus.dilshad.scabi.client.DMeta;
import com.dilmus.dilshad.scabi.client.DNamespace;
import com.dilmus.dilshad.scabi.client.DScabiClientException;
import com.dilmus.dilshad.scabi.client.Dao;
import com.dilmus.dilshad.scabi.client.Dson;
import com.dilmus.dilshad.scabi.common.DDocument;
import com.dilmus.dilshad.scabi.common.DResultSet;
import com.dilmus.dilshad.scabi.common.DScabiException;
import com.dilmus.dilshad.scabi.common.DTable;

/**
 * @author Dilshad Mustafa
 * (c) Dilshad Mustafa
 * All Rights Reserved.
 * @version 1.0
 * @since 13-Mar-2016
 * File Name : Example3_2.java
 */

/**
 * @author Dilshad Mustafa
 *
 */
public class Example3_2 {

	public static void main(String args[]) throws IOException, ParseException, DScabiClientException, DScabiException, java.text.ParseException {
		
		System.out.println("Example3_2");
		DMeta meta = new DMeta("localhost", "5000");
		
		Dson dson = new Dson();
    	dson.add("Namespace", "MyCompany-Tables");
    	dson.add("Type", DNamespace.APPTABLE);
    	dson.add("Host", "localhost");
    	dson.add("Port", "27017");
    	dson.add("UserID", "myuser");
    	dson.add("Pwd", "hello");
    	dson.add("SystemSpecificName", "MyCompanyDB");
    	dson.add("SystemType", "MongoDB");

    	System.out.println("Register new namespace");
    	meta.namespaceRegister(dson);
    	
		Dao dao = new Dao(meta);
		
		// The below examples demonstrate CRUD operations
		
		// Create Table
		try {
			System.out.println("Create Table");
			if (false == dao.tableExists("scabi:MyCompany-Tables:Table1")) {
				DTable t = dao.createTable("scabi:MyCompany-Tables:Table1");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		// Get existing Table
		DTable table = dao.getTable("scabi:MyCompany-Tables:Table1");
		
		// Insert data
		if (0 == table.count()) {
			try {
				System.out.println("Insert data");
				DDocument d = new DDocument();
				d.append("EmployeeName", "Karthik").append("EmployeeNumber", "3000").append("Age",  40);
				table.insert(d);
				
				d.clear();
				d.append("EmployeeName", "Jayaprakash").append("EmployeeNumber", "3001").append("Age",  35);
				table.insert(d);
				
				d.clear();
				d.append("EmployeeName", "Arun").append("EmployeeNumber", "3002").append("Age",  30);
				table.insert(d);
				
				d.clear();
				d.append("EmployeeName", "Balaji").append("EmployeeNumber", "3003").append("Age",  35);
				table.insert(d);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
		// Update records
		System.out.println("Update records");
  	    DDocument d2 = new DDocument();
	   	d2.put("Age", 45);
	   	DDocument updateObj = new DDocument();
	   	updateObj.put("$set", d2);
		table.update(eq("EmployeeName", "Balaji"), updateObj);
		
		// Query data
		// Directly embed Mongo queries using filters : and, or, lt, gt, etc.
		System.out.println("Query data");
		DResultSet result = table.find(or(eq("EmployeeNumber", "3003"), lt("Age", 40)));
		while (result.hasNext()) {
			DDocument d3 = result.next();
			System.out.println("Employee Name : " + d3.getString("EmployeeName"));
			System.out.println("Employee Number : " + d3.getString("EmployeeNumber"));
			System.out.println("Age : " + d3.getInteger("Age").intValue());
		}
		
		dao.close();
		*/
		meta.close();
			
	}
}
