import static com.mongodb.client.model.Filters.eq;
import static com.mongodb.client.model.Filters.lt;
import static com.mongodb.client.model.Filters.or;

import java.io.IOException;
import java.util.ArrayList;

import org.apache.http.ParseException;
import org.bson.Document;

import com.dilmus.dilshad.scabi.client.DMeta;
import com.dilmus.dilshad.scabi.client.DScabiClientException;
import com.dilmus.dilshad.scabi.client.Dao;
import com.dilmus.dilshad.scabi.common.DScabiException;
import com.dilmus.dilshad.scabi.db.DDocument;
import com.dilmus.dilshad.scabi.db.DResultSet;
import com.dilmus.dilshad.scabi.db.DTable;
import com.mongodb.client.MapReduceIterable;
import com.mongodb.client.MongoCollection;

/**
 * @author Dilshad Mustafa
 * (c) Dilshad Mustafa
 * All Rights Reserved.
 * @version 1.0
 * @since 15-Mar-2016
 * File Name : Example4.java
 */

/**
 * @author Dilshad Mustafa
 *
 */
public class Example4 {

	public static void main(String args[]) throws IOException, ParseException, DScabiClientException, DScabiException, java.text.ParseException {
    	System.out.println("Example4");

		DMeta meta = new DMeta("localhost", "5000");
		Dao dao = new Dao(meta);
		
		// The below examples demonstrate accessing MongoCollection and doing
		// Map/Reduce on the MongoCollection
		
		// Create Table
		try {
			if (false == dao.tableExists("scabi:MyOrg.MyTables:Table1")) {
				System.out.println("Create Table");
				DTable t = dao.createTable("scabi:MyOrg.MyTables:Table1");
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		
		// Get existing Table
		DTable table = dao.getTable("scabi:MyOrg.MyTables:Table1");
		
		// Insert data
		if (0 == table.count()) {
			try {
				System.out.println("Insert data");
				DDocument d = new DDocument();
				d.append("EmployeeName", "Karthik").append("EmployeeNumber", "3000").append("Age",  40);
				table.insert(d);
				
				d.clear();
				d.append("EmployeeName", "Jayaprakash").append("EmployeeNumber", "3001").append("Age",  35);
				table.insert(d);
				
				d.clear();
				d.append("EmployeeName", "Arun").append("EmployeeNumber", "3002").append("Age",  30);
				table.insert(d);
				
				d.clear();
				d.append("EmployeeName", "Balaji").append("EmployeeNumber", "3003").append("Age",  35);
				table.insert(d);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		
		// Access underlying MongoCollection
		MongoCollection<Document> c = table.getCollection();
		
		// Example to directly do Map/Reduce on the MongoCollection
		String map = "function() { for (var key in this) { emit(key, null); } }";
		String reduce = "function(key, s) { return 1; }";
		
		MapReduceIterable<Document> out = c.mapReduce(map, reduce);
		for (Document o : out) {
			System.out.println(o.toString());
		    System.out.println("Key name is : " + o.get("_id").toString());
		}			

		dao.close();
		meta.close();
			
	}

}
